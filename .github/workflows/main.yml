name: Check Slots

on:
  schedule:
    - cron: '*/5 * * * *' # Run every 5 minutes
  workflow_dispatch:
    inputs:
      date:
        description: "Date du créneau à vérifier (format AAAA-MM-JJ)"
        required: true
        default: "2024-11-21"

jobs:
  run_script:
    runs-on: python:3-slim
    steps:
      # Étape 1 : Charger et vérifier les variables
      - name: Load variables from file and check DATE
        id: load-vars
        run: |
          # Charger le fichier config.env si présent
          if [ -f config.env ]; then
            source config.env
          else
            echo "Error: config.env file not found!"
            exit 1
          fi

          # Vérifier si DATE est vide
          if [ -z "$DATE" ]; then
            echo "DATE is empty. Skipping script execution."
            echo "continue=false" >> $GITHUB_ENV
          else
            echo "DATE is set to: $DATE"
            echo "DATE=$DATE" >> $GITHUB_ENV
            echo "continue=true" >> $GITHUB_ENV
          fi

      # Étape 2 : Cloner uniquement les fichiers nécessaires
      - name: Checkout necessary files
        if: env.continue == 'true'
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          sparse-checkout: |
            Creneaux.py
            config.env

      # Étape 3 : Configuration de Python
      - name: Setup Python environment
        if: env.continue == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Étape 4 : Cache des dépendances Python
      - name: Cache Python dependencies
        if: env.continue == 'true'
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Étape 5 : Installer les dépendances
      - name: Install dependencies
        if: env.continue == 'true'
        run: |
          python -m pip install --quiet requests

      # Étape 6 : Exécuter le script Python
      - name: Run Python script
        if: env.continue == 'true'
        env:
          PUSHOVER_USER_KEY: ${{ secrets.PUSHOVER_USER_KEY }}
          PUSHOVER_API_TOKEN: ${{ secrets.PUSHOVER_API_TOKEN }}
        run: python Creneaux.py $DATE

      # Étape 7 : Message si le script est ignoré
      - name: Skip message
        if: env.continue == 'false'
        run: |
          echo "The script was not executed because DATE is not set."
